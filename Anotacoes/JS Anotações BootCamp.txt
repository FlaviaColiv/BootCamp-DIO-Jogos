JAVA SCRIPT

	VARIÁVEIS E OPERADORES

verficação de Node : node -v

para executar no console:
	node arquivo.js

Para aparecer no terminal: 

	console.log( ... );
Se texto, entre ("aspas");

VARIÁVEIS
	são espaços para guardar valores.

	let variável = valor; - pode mudar o valor.
	const variável = valor; - não consegue mudar valor posteriormente.

ARRENDODAMENTO

Converter em String
	(variável.toFixed(2)); - limite a 2 dígistos após a virgula.
	
	ESTRUTURAS CONDICIONAIS

			condicionais com resposta booleana.
			quando criada uma variável com resposta booleanda, inicia seu nome em 'is'.
if (variável ou condicional) { 
 executa se verdadeiro, e ignora o restante, se falso, ignora esse e pula pros próximos.
} else if (variável) { 
 segunda opção que executa se verdadeiro
} else {
 executa se falso
};

		EXEMPLO 2: 

const etanol = 5.90;
const gasolina = 7.00;
const kmL = 10;

const distancia = 900;
const tipoCombustivel = gasolina;

const gastoKm = tipoCombustivel / kmL;
let gastoTotal = gastoKm * distancia;

// console.log(gastoTotal.toFixed(2));

if (tipoCombustivel == etanol) {
  console.log("Consumirá: R$" + (gastoTotal.toFixed(2)) + " de Etanol ao longo de " + distancia + "km.");
} else {
  console.log("Consumirá: R$" + (gastoTotal.toFixed(2)) + " de Gasolina ao longo de " + distancia + "km.");
};


_____________________________________________________________________________________________

MATEMÁTICA

const imc = peso / Math.pow(altura, 2); - nesse caso, elevado à 2.
_____________________________________________________________________________________________

FUNÇÕES

Pequeno trecho de código que podemos invocar a qualquer momento. São valores também. 
Ajuda a isolar um código.

	CRIA
	function nome(parâmetro) {
	};

	INVOCA
	nome();


	EXEMPLO:
		function digaMeuNome(nome) {
  		  console.log("Seu nome é: " + nome);
		};

		digaMeuNome("Flávia");
		digaMeuNome("Oliveira");

		Aparece:
			Seu nome é: Flávia
			Seu nome é: Oliveira

	OUTRO EXEMPLO

		function juros (valor, percentualJuros) {
  		  const valorDeAcrescimo = (percentualJuros / 100) * valor;
  		  return valor + valorDeAcrescimo;
		};

		console.log(juros(100, 10));
FUNÇÃO ANÔNIMA

(function () {
  ....
}) ();
		sem nome () e já chama na própria função (); serve para funções que se quer chamar uma única vez.

O main é onde fica o código principal, as outras funções com outros nomes.
_________________________________________________________________________________________

Exemplo: 

function maiorDeIdade (idade) {
  if (idade >= 18) {
    console.log('Você é maior de idade!');
  } else {
    console.log('Você é menor de idade.');
  };

};

maiorDeIdade(18);
____________________________________________________________________________________________

Função dentro de outra função

function escreverMeuNome(nome) {
  return('Meu nome é ' + nome);
};

function maiorDeIdade (idade) {
  if (idade >= 18) {
    return('e sou maior de idade!');
  } else {
    return('e sou menor de idade.');
  };
};

function pessoa (nome, idade) {
  console.log(escreverMeuNome(nome), maiorDeIdade(idade));
}

pessoa('Flavia', 34)

EXEMPLO

console.log("******** CÁLCULO DE PREÇO ********")

function criarDesconto (desconto) {
  return (((valor * desconto)/100));
};

const valor = 100;

function modoDePagamento (modo) {
  if (modo === 1) {
    return (valor - (criarDesconto(10)));
  } else if (modo === 2) {
    return (valor - criarDesconto(15));
  } else if (modo === 3) {
    return valor;
  } else {
    return (valor + (criarDesconto(10)));
  };
};

console.log(modoDePagamento(1));

___________________________________________________________________________________________

OBJETOS

	Coleção dinâmica de chave e valor.

console.log("******** OBJETO ********");

const flavia = {
  nome: 'Flávia Oliveira',
  idade: 34,
};

console.log(flavia.nome);
console.log(flavia.idade);
console.log(flavia);

flavia.altura = 1.65; - adiciona item a lista 
console.log(flavia);
flavia.peso = 72; - adiciona item a lista
console.log(flavia); - imprime: {nome: 'Flávia Oliveira', idade: 34, altura: 1.65, peso: 72}

delete flavia.peso; -exclui item da lista
console.log(flavia); - imprime: {nome: 'Flávia Oliveira', idade: 34, altura: 1.65}

***/***	Função dentro de um objeto é chamado de método.

const flavia = {
  nome: 'Flávia Oliveira',
  idade: 34,

  descrever: function () {
    console.log(`Meu nome é ${this.nome} e minha idade é ${this.idade} anos.`); 	
			- IMPORTANTE para funcionar tem de estar entre crases.
			- this. chama informações dentro do objeto (nesse caso a const flavia).
			- ${} cita elementos.
  }
};

flavia.descrever();
____________________________________________________________________________________________
const atributo = 'idade'; /* string que bate com o valor dentro de flavia */
console.log(flavia[atributo]); /* Anotação de coleção. Acesso dinâmico. */

flavia['nome'] = 'teste'; /* acesso dinâmico */
flavia.nome = 'teste'; /*acesso direto*/
_____________________________________________________________________________________________
CLASSE

definir para que sejam instanciadas.
	onde,
		classe é o que deveriam ser. DEFINIÇÃO DO OBJETO
		instância é a descriação. OCORRENCIA DO OBJETO

	class nomeDaClasse {
	};

class pessoa {

  nome;
  idade;

  descrever () {
    console.log(`Meu nome é ${this.nome} e minha idade é ${this.idade} anos.`);
  }
}

const cristian = new pessoa();
cristian.nome = "Cristian Miranda";
cristian.idade = 32;

console.log(cristian);
console.log(flavia);

flavia.descrever(); - assim aparece a frase.
cristian.descrever();
_____________________________________________________________________________________________
CONSTRUCTOR

	o que acontece quando uma pessoa é instanciada.


class pessoa {

  nome;
  idade;

  constructor(nome, idade) {
    this.nome = nome;
    this.idade = idade;
  }

  descrever () {
    console.log(`Meu nome é ${this.nome} e minha idade é de ${this.idade} anos.`);
  }
}

const cristian = new pessoa("Cristian Miranda", 32);

console.log(cristian);
console.log(flavia);

flavia.descrever();
cristian.descrever();

___________________________________________________________________________________________
COMPARAÇÃO DE PESSOAS

function compararPessoas(p1, p2) {
  if (p1.idade > p2.idade) {
    console.log(`${p1.nome} é mais velho(a) que ${p2.nome}.`);
  } else if (p2.idade > p1.idade) {
    console.log(`${p2.nome} é mais velho(a) que ${p1.nome}.`);
  } else {
    console.log(`${p1.nome} e ${p2.nome} têm a mesma idade.`)
  }
}

compararPessoas(flavia, cristian);
____________________________________________________________________________________________

ATIVIDADE PREÇO DE COMBUSTÍVEIS

class Carros {

  marca;
  cor;
  gastoMedioPorKm;

  constructor(marca, cor, precoCombustivel, kmL) {
    this.marca = marca;
    this.cor = cor;
    this.precoCombustivel = precoCombustivel;
    this.kmL = kmL;
    this.precoMedioPorKm = precoCombustivel / kmL;
    this.gastoMedioPorKm = 1 / kmL;
    this.kmViagem = kmViagem;
    this.precoViagem = kmViagem * this.precoMedioPorKm;
    // this.precoViagem = precoViagem;
  }

  descrever () {
    console.log(`O carro de marca ${this.marca} e de cor ${this.cor} tem um gasto médio de combustível de R$${(this.precoMedioPorKm).toFixed(2)} por km ou ${(this.gastoMedioPorKm).toFixed(2)} litros por km; por isso, se você percorrer ${this.kmViagem}km você gastará R$${(this.precoViagem.toFixed(2))}, só de ida.`);
  }
}

const precoCombustivel = 7.90;
const kmViagem = 17;

const ford = new Carros('Ford', 'azul', [precoCombustivel], 10);
ford.descrever();

const uno = new Carros('Uno', 'vermelho', [precoCombustivel], 12);
uno.descrever();
____________________________________________________________________________________________











.