LINGUAGENS

	Do servidor (principais) - php; Ruby; C#; JS; Java;
	Do cliente (nesse bootcamp) - JS;


HTML

	<input> introduz campo de preenchimento


IMAGEM E TAMANHO

	<img width="400" src="____\______\">

TAGS
 
	<blockquote></blockquote> separa um trecho do restante do texto
	<sup></sup> escrita parte alta
	<sub></sub> escrita parte baixa


LISTAS - 

	ORDENADAS <ol><li><ol></ol></li></ol>  adiciona numeros
	NÃO ORDENADAS <ul><li></li></ul> adiciona simbolos

LINK
	

	<a href="http://...></a>
	Abrir em outra aba adiciona: target="_blank"
	Indicação: para navegação no proprio site usar _self, para sites externos que usar _blank.
	title = "Texto de mensagem que aparece ao passar mouse por cima do link"

FORMULARIOS - processado no servidor, campos de preenchimento de dados

		placeholder="Adiciona texto ao campo de preenchimento"

	<form></form>
		abraça todos os outros. as outras tags funcionam dentro dessa.
		as outras 
		o atributo name, é o identificador
		o atributo action, o local que serão enviados os dados
		o atributo method, método de envio de dados. Com o POST, será enviado sem a visualização direta do usuário. E GET, envia na url
		o atributo action, se abre ou não outra aba.
		o atributo autocomplete, se on, abre a opção de gravar dados e autocompletar e desativado é com o off.
		Tudo com préfixo 'on' significa evento. exemplo onsubmit, adiciona um comando de javascript.
		

	<input  />
		incluir type = "text" name = "nome"
		adiciona caixa de preenchimento, inserir valores. 
		Tipos (type): 
			text; 
			number - funções min = valor mínimo; max = valor maximo; step = intervalos.
			range - cria um scroll;
			color;
			E-mail; url; Date; Checkbox; Radio; Hidden (manda informação por debaixo dos panos); file;  
			password (criptografa visualização);
		 

	<checkbox>
		

	<radio>

	<button>
		adiciona um botão.
		tipos: submit; button; reset;

	<select><option value=""></option></select> - cria uma lista de opções.

	<textarea> 	
		cria campo que tem a opção de incluir mais informações.
		tamanho definido pelo cols e rows

TAGs

	<div> - estruturação dos quadrantes definidos no layout
	<span> - separar trecho para estilização solo.
	<label> - separar trecho usado, normalmente, em lado de um campo como o input

	<fieldsed> - faz um retângulo em volta (circunda a área)
		dentro coloca <legend> como título da quadrante.

	<embed> será descontinuado, então, pode usar a tag <video> com <source> dentro
	Frame - mini janelas de html na mesma página

	<iframe widht="400" height="300" src="http....> 
		pode afetar a segurança do site.
		mostra o conteúdo de outro site dentro do site.
		conta a visita no site linkado no iframe.
		exemplos de uso, colocar video do youtube, ou mapa do googleMap. 
	
	<header>
	<main> - aparecer uma unica vez
	<footer>
	<nav> acessos de navegação
	<aside> relacionado ao conteudo principal
	<article> sessoes independentes
	<section> - elementos de cabeçalho e conteúdo
	<div> genérica, sem valor semantico, estilização
	 

MULTIMÍDIA

	<img src="endereço da imagem" alt="descrição da imagem" title="o que aparece ao passar o mouse">
	<figcaption> descrição de imagem dentro da figure
	<figure> bloco organizador de imagem

TABELAS

	<table></table> bloco da tabela
	<caption></caption> da um titulo a tabela
	<tr></tr> divide em linhas
	<td></td> cria colunas
	
GERENCIAMENTO DE FOCO

		tabindex="1" - grau de foco, por padrão vem zero (que é a ativação), sem foco usa '-1', foco utilizando tab do teclado.



CSS

	    <p id="explicacao-seletores">No CSS nós possuímos os seletores por ID.</p>
    <div>
        <ul>
            <li class="seletor"><b>Seletor por Tipo: </b>Busca elementos por uma tag HTML específica.</li> 
            <li title="seletor-id"><b>Seletor por ID (#): </b>Busca elementos através do atributo '#'</li>
            <li title="seletor-classe universal"><b>Seletor por Classe (.): </b>Busca elementos através do atributo '.'</li>
            <li><b>Seletor Universal (*): </b>Seleciona todos os elementos HTML.</li>
            <li><b>Seletor de Atributo ([atrib]): </b>Seleciona elementos que possuem um atributo e conseguimos também buscar atributos com um valor específico.</li>
        </ul>

/* SELETOR DE TAG OU DE TIPO */

h1 {
    background: darkblue;
    color: lightgreen;
}

div {
    background: lightblue;
    color: darkblue;
}

li {
    background: violet;
}

/* SELETOR DE ID */

#texto-boas-vindas {
    background: red;
    color: white;
}

#explicacao-seletores {
    background: grey;
}

/* SELETORES POR CLASSES */

.seletor {
    color: red;
    text-transform: uppercase;
}

/* SELETOR UNIVERSAL */

* {
    font-weight: bold;
}

/* SELETOR DE ATRIBUTO */

[title] {
    color: green;
}

[title="seletor-classe"] {
    background: gray;
}



[title ~= "universal"] {
    background: #AA2299;
}

[title^="clas"] {
    color: #AA2299;
}


OBJECT-FIT 
	ajuste de objeto, ajusta imagem ou video para caber em um container.
	object-fit: contain; - cabe dentro da área definida e mantém as proporções originais da imagem;
		    fill; - distorce a imagem de acordo as proporções da área definida.
		    cover; - preencher a área e corta os excedentes, se pequena repete.
		    none; - mantem tamanho original e corta excedentes ou deixa espaços vazio, ignorando o objeto pai.
		    scale-down; - das configurações anteriores qual a escala menor.

OBJECT-POSITION
	especificar como deve ser posicionado. horizontal vertical
	object-position: eixoHorizontal eixoVertical;

FUNDO DOS ELEMENTOS - ALTERAÇÃO
	background-image: url( ), url( ); - adiciona uma imagem ao fundo.
			  linear-gradient(corInicial, corFinal, ... ); - cor em gradiente no fundo (reta vertical), tem possibilidade de aumentar;
			  radial-gradiente(corInicial, corFinal, ... ); cor em gradiente no fundo (circular centro),
			  radial-gradiente-repeat(corInicial posiçãoInicio posiçãoFinal, cor2 posiçãoInicio posiçãoFinal, ... ); podendo se tornar listras na horizontal

Site: CSS3 Patterns Gallery - tem efeitos já definidos de fundo em CSS.


	background-size: ; - definição do tamalho dessa imagem de fundo.
			auto; - padrão; 
			cover; - cobrir; ocupa todo o fundo do elemento, se pequena ela repete e grande corta.
			contain; - todo o conteudo da imagem;
			eixox eixoy;
			imagem1, imagem2; - se mais de uma imagem, configurações de cada uma separadas por virgulas.
			
	background-repeat: ; - definir sobre a repetição (ou não) da imagem de fundo;
			  repeat; - repete em todas as direções, vem por padrão, corta os canto excedentes
			  repeat-x; - repete horizontalmente;
			  repeat-y; - repete verticalmente.
			  space; - repete nos eixos x e y, sem cortar imagem e espeços em brancos nos espaços;
			  round; - repete nos eixos x e y, elas são redimensionadas;
			  no-repeat; sem repetições.
			  x y;

	background-position: ; - definir posicionamento da imagem. (center, top, botton, left, right ou em unidades de medida)

	background-attachment: ; - como fundo do vai se movimentar;
			      fixed; - fixa mesmo se rolar página.
			      scroll; - rola junto com o scroll da pagina.
			      local; - rola junto com o elemento, mas fixa na pagina




PSEUDO-SELETOR (CSS)

.exemplo:hover {} - só irá ocorrer quando passar o mouse em cima.
.exemplo:focus {} - ativa quando estiver focado (com tab).
.exemplo:active {} - será ativado quando clicar no elemento, ou quando estiver sendo ativado, com enter.

em uma lista
.li:first-child {} - primeiro item irá receberá as regras
.li:alst-child {} - ultimo elemento.
.li:nth-child(1) {} - irá funcionar na posição que foi passada. ou posição impar (odd) ou posição par (even).

PSEUDO-ELEMENTO (CSS)

.exemplo::after {} - cria mais um elemento após o elemento selecionado (de exemplo)
.exemplo::before {} - cria antes.


FONTE "REDRESSED" - do google fontes. 


PROPRIEDADE DISPLAY

display: block; - ocupa a largura inteira, como um bloco.
	 inline; - outros elementos podem ficar ao lado desse, a largura de seu contéudo.
	 inline-block; - elementos ao redor respeitam inline, mas, consegue as propriedades de altura e largura, adiciona o block ao final.
	 none; - o conteúdo não aparece na página.


POSICIONAMENTO

position: static; - vem como padrão, não obedece comandos de posicionamento.
	  relative; - obdece os comando de posição;
	  absolute; - irá se posicionar na tela ignorando todos os outros elementos.
	  fixed; - semelhante ao absolut, mas, fica fixo na página.

z-index: nº; - por padrão vem 0 (zero), mas, ao escrever um numero o posiciona por cima dos elementos menores.


ESPAÇAMENTO	

margin: 10px;
padding: 10px;
box-sizing: border-box; - terá a largura e altura finais de acordo ao que programamos em height e width, mesmo alterando margin e padding.
	    content-box; - soma todas as alterações, mudando o tamanho final.

OUTROS ESTILOS 

border-widht: 1px;
border-style: solid;
border-color: green;
=
border: 1px solid green;

border-radius: 10px; - bordas arrendodas (top-left top-right button-right button-left); 

box-shadow: 5px 5px grey; (horizontal vertical cor) ou (eixoX eixoY disfoque propagação cor)

cursor: help; - aparece uma interrogação no local do mouse.
	pointer; - uma mãozinha.

outline: none; - não vai aparecer

float: left; - flutuação, posição nesse caso a esquerda dos outros elementos.

overflow: hidden; - conteúdo maior que a caixa de referência sumisse;
	  scroll; - adiciona barra de elemento sem ultrapassar tamanho da caixa de referencia.












